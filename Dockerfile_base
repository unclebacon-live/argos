# Note: this is a armv7 architecture specific dockerfile
# and can only be built on a raspberry pi:
#   docker build -t angadsingh/argos-base:armv7 -f Dockerfile_base
# or using docker buildx like so:
# setup buildx first: https://collabnix.com/building-arm-based-docker-images-on-docker-desktop-made-possible-using-buildx/
#   docker buildx build --platform linux/arm/v7 -t angadsingh/argos-base:armv7 -f Dockerfile_base .

FROM amd64/python:3.7-slim-buster

RUN mkdir -p /usr/src/argos
WORKDIR /usr/src/argos

RUN apt-get update && apt-get install -y build-essential python3-dev git libjpeg62 libwebp-dev libpng-dev libtiff-dev libopenjp2.7-dev libilmbase-dev libopenexr-dev libgstreamer1.0-dev ffmpeg libgtk-3-dev libatlas3-base
RUN python3 -m venv venv
ENV PATH="/usr/src/argos/venv/bin:$PATH"
RUN pip install --upgrade pip
RUN pip install wheel

# since pip isn't able to find the armv7 wheels for these packages inside docker for some reason ¯\_(ツ)_/¯

RUN pip install grpcio-1.32.0
RUN pip install numpy-1.19.5
RUN pip install h5py-2.10.0
RUN pip install opencv_python-4.5.1.48
RUN pip install cffi-1.14.4
RUN pip install bcrypt-3.2.0
RUN pip install cryptography-3.3.1
RUN pip install PyNaCl-1.4.0

RUN pip install https://github.com/bitsy-ai/tensorflow-arm-bin/releases/download/v2.4.0/tensorflow-2.4.0-cp37-none-linux_armv7l.whl

COPY ./requirements.txt /usr/src/argos/
RUN pip install --no-cache-dir -r requirements.txt

RUN git clone https://github.com/tensorflow/models.git
RUN cd models/research/object_detection/packages/tf2 && python -m pip install . --no-deps
